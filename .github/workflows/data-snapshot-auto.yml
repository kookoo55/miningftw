name: Auto data snapshot (PR → auto-merge → publish to main)

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Working branch (must start with bot/data-snapshot/ to auto-merge)"
        required: true
        default: "bot/data-snapshot/run"
  schedule:
    - cron: "0 * * * *" # hourly; adjust as you like

permissions:
  contents: write
  pull-requests: write

jobs:
  build-pr-merge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Ensure deps
        run: |
          sudo apt-get update && sudo apt-get install -y zip
          python3 -V

      - name: Package CSVs
        run: |
          mkdir -p data/packages
          (cd data && zip -r ../data/packages/data_csvs.zip . -i "**/*.csv" || true)

      - name: Build manifest.json + DATA_SNAPSHOT.md
        run: |
          python3 - << 'PY'
          import csv, json, glob, hashlib
          from pathlib import Path
          pkg = Path("data/packages"); pkg.mkdir(parents=True, exist_ok=True)
          rep = Path("reports");       rep.mkdir(parents=True, exist_ok=True)
          manifest = {"files": []}
          md = ["# Data Snapshot", ""]
          for path in sorted(glob.glob("data/**/*.csv", recursive=True)):
            h = hashlib.sha256()
            with open(path, "rb") as f:
              for chunk in iter(lambda: f.read(65536), b""):
                h.update(chunk)
            sha = h.hexdigest()
            headers = []; samples = []; rows = 0
            with open(path, newline="", encoding="utf-8") as f:
              rdr = csv.reader(f)
              headers = next(rdr, [])
              for r in rdr:
                rows += 1
                if len(samples) < 5: samples.append(r)
            manifest["files"].append({
              "path": path, "sha256": sha, "headers": headers,
              "row_count": rows, "sample_rows": samples
            })
            md += [
              f"## `{path}`", "",
              f"- Rows: **{rows}**",
              f"- SHA256: `{sha}`", "",
              "**Headers**", "",
              "`" + ", ".join(headers) + "`", "",
              "**First 5 rows**", "",
              "| " + " | ".join(headers) + " |",
              "|" + "|".join(["---"]*len(headers)) + "|",
            ]
            for r in samples:
              md.append("| " + " | ".join(r) + " |")
            md.append("")
          (pkg/"manifest.json").write_text(json.dumps(manifest, indent=2), encoding="utf-8")
          (rep/"DATA_SNAPSHOT.md").write_text("\n".join(md), encoding="utf-8")
          PY

      - name: Create PR (body = snapshot)
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          add-paths: |
            data/packages/data_csvs.zip
            data/packages/manifest.json
            reports/DATA_SNAPSHOT.md
          branch: ${{ inputs.branch || 'bot/data-snapshot/run' }}
          title: "chore: data snapshot (zip + manifest + snapshot)"
          commit-message: "chore: data snapshot (auto)"
          body-path: reports/DATA_SNAPSHOT.md
          delete-branch: true

      - name: Auto-merge PR if policy matches
        if: startsWith(inputs.branch, 'bot/data-snapshot/')
        uses: actions/github-script@v7
        with:
          script: |
            const pr = Number("${{ steps.cpr.outputs.pull-request-number || 0 }}");
            if (!pr) { core.setFailed("No PR number from create-pull-request."); }
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr,
              merge_method: "squash"
            });
            core.info(`Merged PR #${pr}`);